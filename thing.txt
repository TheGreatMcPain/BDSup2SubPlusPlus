diff --git a/src/Subtitles/subtitleprocessor.cpp b/src/Subtitles/subtitleprocessor.cpp
index a9ab05a..049b4f5 100644
--- a/src/Subtitles/subtitleprocessor.cpp
+++ b/src/Subtitles/subtitleprocessor.cpp
@@ -519,26 +519,26 @@ void SubtitleProcessor::scanSubtitles()
         double heightScale = (double) height / picTrg->imageHeight();
         double xScale = (double) xOfs / picTrg->x();
         double yScale = (double) yOfs / picTrg->y();
-
-        for (int i = 0; i < imageRects.size(); ++i)
+
+        for (QRect imageRect : imageRects)
         {
-            int oldWidth = imageRects[i].width();
-            imageRects[i].setX((int) ((imageRects[i].x() * xScale) + 0.5));
-            imageRects[i].setWidth((int) ((oldWidth * widthScale) + 0.5));
+            int oldWidth = imageRect.width();
+            imageRect.setX((int) ((imageRect.x() * xScale) + 0.5));
+            imageRect.setWidth((int) ((oldWidth * widthScale) + 0.5));
 \
-            int oldHeight = imageRects[i].height();
-            imageRects[i].setY((int) ((imageRects[i].y() * yScale) + 0.5));
-            imageRects[i].setHeight((int) ((oldHeight * heightScale) + 0.5));
+            int oldHeight = imageRect.height();
+            imageRect.setY((int) ((imageRect.y() * yScale) + 0.5));
+            imageRect.setHeight((int) ((oldHeight * heightScale) + 0.5));
         }
-        for (int i = 0; i < windowRects.size(); ++i)
+        for (QRect windowRect : windowRects)
         {
-            int oldWidth = windowRects[i].width();
-            windowRects[i].setX((int) ((windowRects[i].x() * xScale) + 0.5));
-            windowRects[i].setWidth((int) ((oldWidth * widthScale) + 0.5));
+            int oldWidth = windowRect.width();
+            windowRect.setX((int) ((windowRect.x() * xScale) + 0.5));
+            windowRect.setWidth((int) ((oldWidth * widthScale) + 0.5));
 \
-            int oldHeight = windowRects[i].height();
-            windowRects[i].setY((int) ((windowRects[i].y() * yScale) + 0.5));
-            windowRects[i].setHeight((int) ((oldHeight * heightScale) + 0.5));
+            int oldHeight = windowRect.height();
+            windowRect.setY((int) ((windowRect.y() * yScale) + 0.5));
+            windowRect.setHeight((int) ((oldHeight * heightScale) + 0.5));
         }
     }
 
@@ -731,25 +731,25 @@ void SubtitleProcessor::reScanSubtitles(Resolution oldResolution, double fpsTrgO
         double yScale = (double) yOfs / subPictures[i]->y();
 
 
-        for (int i = 0; i < imageRects.size(); ++i)
+        for (QRect imageRect : imageRects)
         {
-            int oldWidth = imageRects[i].width();
-            imageRects[i].setX((int) ((imageRects[i].x() * xScale) + 0.5));
-            imageRects[i].setWidth((int) ((oldWidth * widthScale) + 0.5));
+            int oldWidth = imageRect.width();
+            imageRect.setX((int) ((imageRect.x() * xScale) + 0.5));
+            imageRect.setWidth((int) ((oldWidth * widthScale) + 0.5));
 \
-            int oldHeight = imageRects[i].height();
-            imageRects[i].setY((int) ((imageRects[i].y() * yScale) + 0.5));
-            imageRects[i].setHeight((int) ((oldHeight * heightScale) + 0.5));
+            int oldHeight = imageRect.height();
+            imageRect.setY((int) ((imageRect.y() * yScale) + 0.5));
+            imageRect.setHeight((int) ((oldHeight * heightScale) + 0.5));
         }
-        for (int i = 0; i < windowRects.size(); ++i)
+        for (QRect windowRect : windowRects)
         {
-            int oldWidth = windowRects[i].width();
-            windowRects[i].setX((int) ((windowRects[i].x() * xScale) + 0.5));
-            windowRects[i].setWidth((int) ((oldWidth * widthScale) + 0.5));
+            int oldWidth = windowRect.width();
+            windowRect.setX((int) ((windowRect.x() * xScale) + 0.5));
+            windowRect.setWidth((int) ((oldWidth * widthScale) + 0.5));
 \
-            int oldHeight = windowRects[i].height();
-            windowRects[i].setY((int) ((windowRects[i].y() * yScale) + 0.5));
-            windowRects[i].setHeight((int) ((oldHeight * heightScale) + 0.5));
+            int oldHeight = windowRect.height();
+            windowRect.setY((int) ((windowRect.y() * yScale) + 0.5));
+            windowRect.setHeight((int) ((oldHeight * heightScale) + 0.5));
         }
 
         // fix erase patches
@@ -1108,8 +1108,8 @@ void SubtitleProcessor::writeSub(QString filename)
                 }
                 QString fnp = supXML->getPNGname(fn, i + 1);
                 int numberOfImages = 1;
-                QMap<int, QRect> &imageRects = subPictures[i]->imageSizes();
-
+                QMap<int, QRect> &imageRects = subPictures[i]->imageSizes();
+                
                 if (imageRects.size() > numberOfImages)
                 {
                     numberOfImages = imageRects.size();
@@ -1707,17 +1707,17 @@ bool SubtitleProcessor::updateTrgPic(int index)
         }
         double xScale = (double) xOfs / picTrg->x();
 
-        for (int i = 0; i < imageRects.size(); ++i)
+        for (QRect imageRect : imageRects)
         {
-            int oldWidth = imageRects[i].width();
-            imageRects[i].setX((int) ((imageRects[i].x() * xScale) + 0.5));
-            imageRects[i].setWidth((int) ((oldWidth * widthScale) + 0.5));
+            int oldWidth = imageRect.width();
+            imageRect.setX((int) ((imageRect.x() * xScale) + 0.5));
+            imageRect.setWidth((int) ((oldWidth * widthScale) + 0.5));
         }
-        for (int i = 0; i < windowRects.size(); ++i)
+        for (QRect windowRect : windowRects)
         {
-            int oldWidth = windowRects[i].width();
-            windowRects[i].setX((int) ((windowRects[i].x() * xScale) + 0.5));
-            windowRects[i].setWidth((int) ((oldWidth * widthScale) + 0.5));
+            int oldWidth = windowRect.width();
+            windowRect.setX((int) ((windowRect.x() * xScale) + 0.5));
+            windowRect.setWidth((int) ((oldWidth * widthScale) + 0.5));
         }
     }
     if (std::abs((hNew + 0.5) - hOld) > .5)
@@ -1733,17 +1733,17 @@ bool SubtitleProcessor::updateTrgPic(int index)
         }
         double yScale = (double) yOfs / picTrg->y();
 
-        for (int i = 0; i < imageRects.size(); ++i)
+        for (QRect imageRect : imageRects)
         {
-            int oldHeight = imageRects[i].height();
-            imageRects[i].setY((int) ((imageRects[i].y() * yScale) + 0.5));
-            imageRects[i].setHeight((int) ((oldHeight * heightScale) + 0.5));
+            int oldHeight = imageRect.height();
+            imageRect.setY((int) ((imageRect.y() * yScale) + 0.5));
+            imageRect.setHeight((int) ((oldHeight * heightScale) + 0.5));
         }
-        for (int i = 0; i < windowRects.size(); ++i)
+        for (QRect windowRect : windowRects)
         {
-            int oldHeight = windowRects[i].height();
-            windowRects[i].setY((int) ((windowRects[i].y() * yScale) + 0.5));
-            windowRects[i].setHeight((int) ((oldHeight * heightScale) + 0.5));
+            int oldHeight = windowRect.height();
+            windowRect.setY((int) ((windowRect.y() * yScale) + 0.5));
+            windowRect.setHeight((int) ((oldHeight * heightScale) + 0.5));
         }
     }
     // was image cropped?
@@ -1844,18 +1844,18 @@ void SubtitleProcessor::moveToBounds(SubPicture *picture, int index, double barF
                 dy = offsetY;
             }
 
-            for (int i = 0; i < imageRects.size(); ++i)
+            for (QRect imageRect : imageRects)
             {
-                int height = imageRects[i].height();
-                imageRects[i].setY(imageRects[i].y() + dy);
-                imageRects[i].setHeight(height);
+                int height = imageRect.height();
+                imageRect.setY(imageRect.y() + dy);
+                imageRect.setHeight(height);
             }
 
-            for (int i = 0; i < windowRects.size(); ++i)
+            for (QRect windowRect : windowRects)
             {
-                int height = windowRects[i].height();
-                windowRects[i].setY(windowRects[i].y() + dy);
-                windowRects[i].setHeight(height);
+                int height = windowRect.height();
+                windowRect.setY(windowRect.y() + dy);
+                windowRect.setHeight(height);
             }
 
             print(QString("Caption %1 moved to y position %2\n")
@@ -1878,18 +1878,18 @@ void SubtitleProcessor::moveToBounds(SubPicture *picture, int index, double barF
                 dy = offsetY;
             }
 
-            for (int i = 0; i < imageRects.size(); ++i)
+            for (QRect imageRect : imageRects)
             {
-                int height = imageRects[i].height();
-                imageRects[i].setY(imageRects[i].y() + dy);
-                imageRects[i].setHeight(height);
+                int height = imageRect.height();
+                imageRect.setY(imageRect.y() + dy);
+                imageRect.setHeight(height);
             }
 
-            for (int i = 0; i < windowRects.size(); ++i)
+            for (QRect windowRect : windowRects)
             {
-                int height = windowRects[i].height();
-                windowRects[i].setY(windowRects[i].y() + dy);
-                windowRects[i].setHeight(height);
+                int height = windowRect.height();
+                windowRect.setY(windowRect.y() + dy);
+                windowRect.setHeight(height);
             }
 
             print(QString("Caption %1 moved to y position %2\n")
